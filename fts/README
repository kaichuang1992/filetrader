-- REQUIREMENTS --
* The Apache module mod_xsendfile:
	https://tn123.org/mod_xsendfile/

* The PHP PDO module for SQlite

* A 64 bit operating system and PHP installation (for >2G file support)

--- On Fedora ---

$ sudo yum install mod_xsendfile php-pdo

--- On Debian/Ubuntu ---

$ sudo apt-get install libapache2-mod-xsendfile php5-sqlite

-- INSTALLATION --

It is assumed you placed the source files (and sub directories) of fts in 
/var/www/html/fts. This is the default directory on Red Hat based systems. On 
Debian this would be /var/www/fts. Now perform the following commands in the
directory /var/www/html/fts: 
 
# create data directory
$ mkdir -p data

# set unix permissions
$ chmod o+w -R data

-- SELINUX CONFIGURATION --

Set the correct SELinux labels (only for Fedora/Red Hat systems?)

$ chcon -R -t httpd_sys_rw_content_t data

-- CONFIGURATION --

Copy config.php.default to config.php and modify it for your situation
(if needed).

In order to configure storage consumers it is recommended to use a 
reasonable length OAuth secrets (HMAC-SHA1) or RSA certificates (RSA-SHA1). 
The provided tool in the "tools" directory will let you configure them, 
see for more information and examples:

$ php tools/manageConsumers.php --help

NOTE [1]: In case HMAC-SHA1 (key/secret) is used the key and secret should be 
configured in the remote consumer that is accessing this service. In case 
RSA-SHA1 (certificate) is used the public key should be configured using this
tool.

NOTE [2]: The file data/fts.sqlite should be writable by the web server. If you
use the tool first the file will be created, but not be writable by the web 
server, so the web server should have write access again:

$ chmod o+w data/fts.sqlite

--- APACHE CONFIGURATION ---

Included below is an example for configuring the web server, Apache in 
this case. 

On Fedora/Red Hat one should copy the following to /etc/httpd/conf.d/fts.conf
and restart the web server. This takes care of protecting the data directory 
and enabling X-SendFile.

--- CUT ---
<Directory "/var/www/html/fts">
    Options None
    Order Allow,Deny
    Allow from All
    XSendFile On
</Directory>

<Directory "/var/www/html/fts/data">
    Deny from All
</Directory>
--- CUT ---

In tests on Debian it was also needed to enable the following directive in
the section containing XSendFile:

--- CUT ---
    XSendFileAllowAbove on
--- CUT ---

NOTE: If you checked out the source from SVN make sure it is not possible to 
access the .svn directories and the files therein files through the web! See 
[1] for more information.

-- OPENSOCIAL --
Included is an OpenSocial gadget (gadget.xml) that can be loaded in an 
OpenSocial container. 

-- ISSUES --
If you are using the persistent database connection to the SQlite file be aware 
that remove the SQlite file from the file system writing to the database still 
seems to work, but reading from it fails. A fix is to restart Apache/PHP after 
doing this...

-- REFERENCES --
[1] http://codex.wordpress.org/Installing/Updating_WordPress_with_Subversion#A_Note_About_.SVN_Folders_on_Public_Servers
