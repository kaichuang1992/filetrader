-- REQUIREMENTS --
* php-pecl-oauth (http://pecl.php.net/package/oauth)
	==> Fedora Package (php-pecl-oauth)
		http://admin.fedoraproject.org/updates/php-pecl-oauth
		(Currently in testing for F14/F15, soon to be pushed to stable)

	==> Debian Package
		Not in Debian (use "pecl install oauth")
		
* mod_xsendfile (https://tn123.org/mod_xsendfile/)
	==> Fedora Package (mod_xsendfile)

	==> Debian Package (libapache2-mod-xsendfile)

* php-pdo (with SQLite driver)
	==> Fedora Package (php-pdo)
		In Fedora this package contains the SQLite driver

	==> Debian Package (php5-sqlite)
		Also contains SQLite PDO driver

* 64 bit operating system and PHP installation (for >2G file support)

--- INSTALLATION ---

It is assumed you placed the source files (and sub directories) of fts in 
/var/www/html/fts. This is the default directory on Red Hat based systems. On 
Debian this would be /var/www/fts. Now perform the following commands in the
directory /var/www/html/fts: 
 
# create data directory
$ mkdir -p data

# set unix permissions
$ chmod o+w -R data

--- SELINUX CONFIGURATION ---

Set the correct SELinux labels (only for Fedora/Red Hat systems?)

$ chcon -R -t httpd_sys_rw_content_t data

--- CONFIGURATION ---

Copy config.php.default to config.php and modify it for your situation
(if needed).

In order to configure storage consumers it is recommended to use a 
reasonable length secrets. The provided tool in the "tools" directory
will create them for you.

$ php tools/manageConsumer.php add [NAME OF CONSUMER]

For example:

$ php tools/manageConsumers.php add "my.university.org"
consumerKey: [my.university.org], 
consumerSecret: [421398aec34678f1efc506a08f36446d]

You can list the configured consumers using:

$ php tools/manageConsumers.php list

*** LIST OF STORAGE CONSUMERS ***
[KEY]    = my.university.org
[SECRET] = 421398aec34678f1efc506a08f36446d
[PATH]   = /var/www/html/filetrader/fts/data/my.university.org

NOTE [1]: The key and secret should be configured in the remote consumer that 
is accessing this service. The path is the location on the local file system 
where files belonging to this consumer will be stored.

NOTE [2]: The file data/fts.sqlite should be writable by the web server. If you
use the tool manageConsumers.php first the file will be created, but not be 
writable by the web server anymore, so the setting the permissions part of the
installation section should be repeated!

--- APACHE CONFIGURATION ---

Included below is an example for configuring the web server, Apache in 
this case. 

On Fedora/Red Hat one should copy the following to /etc/httpd/conf.d/fts.conf
and restart the web server. This takes care of protecting the data directory 
and enabling X-SendFile.

--- CUT ---
<Directory "/var/www/html/filetrader/fts">
    Options None
    Order Allow,Deny
    Allow from All
    XSendFile On
</Directory>

<Directory "/var/www/html/filetrader/fts/data">
    Deny from All
</Directory>
--- CUT ---

In tests on Debian it was also needed to enable the following directive:

--- CUT ---
    XSendFileAllowAbove on
--- CUT ---

NOTE: If you checked out the source from SVN make sure it is not possible to 
access the .svn directories and the files therein files through the web! See 
[1] for more information.

--- ISSUES ---
We are using a persistent database connection to the SQlite file, which means 
that if you remove the file from the file system writing to the database still 
seems to work, but reading from it fails or something like that... A solution 
is to restart Apache/PHP when doing this...

--- REFERENCES ---
[1] http://codex.wordpress.org/Installing/Updating_WordPress_with_Subversion#A_Note_About_.SVN_Folders_on_Public_Servers
